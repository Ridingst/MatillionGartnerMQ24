name: Matillion Data Productivity Cloud
run-name: Validating New and Modified Pipelines
permissions: write-all

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "validate"
  validate:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Generate a token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.CLIENT }}
          private-key: ${{ secrets.TOKEN }}

      - name: Use the token
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: |
          gh api octocat

      # Runs a single command using the runners shell
      - name: Validate
        run: |
          echo ${bold}Validating Pipelines...
          echo Identifying new or updated pipelines
          sleep 4.5
          echo "(1) New Orchestration Pipeline and (1) New Transformation Pipeline identified;"
          echo "    [ORCH] Marketing Leads/Leads 2024"
          echo "    [TRANS] Marketing Leads/Leads 2024 Prep"
          echo ""
          echo ""
          sleep 3
          echo "Validating Pipelines 1/2: [ORCH] Marketing Leads/Leads 2024 - SUCCESS"
          sleep 3
          echo "Validating Pipelines 2/2: [TRANS] Marketing Leads/Leads 2024 Prep - SUCCESS"
          echo "2/2 Pipelines successfully validated"
          echo "DONE - SUCCESS"

      - name: Update Status
        #run: gh issue comment "$NUMBER" --body "$BODY"
        run: gh issue comment 1 --body "$BODY"
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
          GH_REPO: ${{ github.repository }}
          NUMBER: ${{ github.event.issue.number }}
          BODY: >
            # Project: Marketing Leads
            ## Validation Status: ✅
            
      - name: Update Status
        #run: gh issue comment "$NUMBER" --body "$BODY"
        run: gh issue comment 1 --body "$BODY"
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
          GH_REPO: ${{ github.repository }}
          NUMBER: ${{ github.event.issue.number }}
          BODY: >
            ### Validation Status: ✅ $'\r\n'
            **Project: Marketing Leads** $'\r\n'
            $'\r\n'
            | Pipeline Name                   | Orch/Trans     | Validation Status |$'\r\n'
            |---------------------------------|----------------|-------------------|$'\r\n'
            | Marketing Leads/Leads 2024      | Orchestration  | ✅                 |$'\r\n'
            | Marketing Leads/Leads 2024 Prep | Transformation | ✅                 |$'\r\n'
